{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "1824432812604485860"
    }
  },
  "parameters": {
    "solutionPrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 6,
      "metadata": {
        "description": "Prefix Name"
      }
    }
  },
  "variables": {
    "solutionLocation": "[resourceGroup().location]",
    "baseUrl": "https://raw.githubusercontent.com/nchandhi/nctestrepo/main/"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_managed_identity",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "9709088936627504990"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string",
              "metadata": {
                "description": "Solution Location"
              }
            },
            "miName": {
              "type": "string",
              "defaultValue": "[format('{0}-managed-identity', parameters('solutionName'))]",
              "metadata": {
                "description": "Name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('miName')]",
              "location": "[parameters('solutionLocation')]",
              "tags": {
                "app": "[parameters('solutionName')]",
                "location": "[parameters('solutionLocation')]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName')), resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName')), '2023-01-31').principalId]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName'))]"
              ]
            }
          ],
          "outputs": {
            "managedIdentityOutput": {
              "type": "object",
              "value": {
                "id": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName'))]",
                "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('miName')), '2023-01-31').principalId]",
                "name": "[parameters('miName')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_storage_account.bicep",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          },
          "managedIdentityObjectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity'), '2022-09-01').outputs.managedIdentityOutput.value.objectId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "8206933513888019004"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string",
              "metadata": {
                "description": "Solution Location"
              }
            },
            "saName": {
              "type": "string",
              "defaultValue": "[format('{0}storageaccount', parameters('solutionName'))]",
              "metadata": {
                "description": "Name"
              }
            },
            "managedIdentityObjectId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('saName')]",
              "location": "[parameters('solutionLocation')]",
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              },
              "kind": "StorageV2",
              "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "isHnsEnabled": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('saName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "allowPermanentDelete": false,
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('saName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('saName'), 'default', 'data')]",
              "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('saName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, parameters('managedIdentityObjectId'), resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe'))]",
              "properties": {
                "principalId": "[parameters('managedIdentityObjectId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalType": "ServicePrincipal"
              }
            }
          ],
          "outputs": {
            "storageAccountOutput": {
              "type": "object",
              "value": {
                "id": "[resourceId('Microsoft.Storage/storageAccounts', parameters('saName'))]",
                "name": "[parameters('saName')]",
                "uri": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2022-09-01').primaryEndpoints.web]",
                "dfs": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2022-09-01').primaryEndpoints.dfs]",
                "storageAccountName": "[parameters('saName')]",
                "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2021-04-01').keys[0].value]",
                "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('saName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('saName')), '2022-09-01').keys[0].value, environment().suffixes.storage)]",
                "dataContainer": "data"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_azure_ai_service",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "6404227374407408403"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string"
            },
            "accounts_byc_cogser_name": {
              "type": "string",
              "defaultValue": "[format('{0}-cogser', parameters('solutionName'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('accounts_byc_cogser_name')]",
              "location": "[parameters('solutionLocation')]",
              "sku": {
                "name": "S0"
              },
              "kind": "CognitiveServices",
              "identity": {
                "type": "None"
              },
              "properties": {
                "apiProperties": {},
                "customSubDomainName": "[parameters('accounts_byc_cogser_name')]",
                "networkAcls": {
                  "defaultAction": "Allow",
                  "virtualNetworkRules": [],
                  "ipRules": []
                },
                "publicNetworkAccess": "Enabled"
              }
            }
          ],
          "outputs": {
            "cogSearchOutput": {
              "type": "object",
              "value": {
                "cogServiceName": "[parameters('accounts_byc_cogser_name')]",
                "cogServiceKey": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_byc_cogser_name')), '2023-05-01').key1]",
                "cogServiceEndpoint": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_byc_cogser_name')), '2023-05-01').endpoint]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_ai_search_service",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "10850109996302442353"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string"
            },
            "searchServices_byc_cs_name": {
              "type": "string",
              "defaultValue": "[format('{0}-cs', parameters('solutionName'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2022-09-01",
              "name": "[parameters('searchServices_byc_cs_name')]",
              "location": "[parameters('solutionLocation')]",
              "tags": {
                "ProjectType": "aoai-your-data-service"
              },
              "sku": {
                "name": "basic"
              },
              "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "default",
                "publicNetworkAccess": "enabled",
                "networkRuleSet": {
                  "ipRules": []
                },
                "encryptionWithCmk": {
                  "enforcement": "Unspecified"
                },
                "disableLocalAuth": false,
                "authOptions": {
                  "apiKeyOnly": {}
                }
              }
            }
          ],
          "outputs": {
            "searchServiceOutput": {
              "type": "object",
              "value": {
                "searchServiceName": "[parameters('searchServices_byc_cs_name')]",
                "searchServiceAdminKey": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('searchServices_byc_cs_name')), '2022-09-01').primaryKey]",
                "searchServiceEndpoint": "[format('https://{0}.search.windows.net', parameters('searchServices_byc_cs_name'))]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_azure_open_ai",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "13351567716819067329"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string"
            },
            "accounts_byc_openai_name": {
              "type": "string",
              "defaultValue": "[format('{0}-openai', parameters('solutionName'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('accounts_byc_openai_name')]",
              "location": "[parameters('solutionLocation')]",
              "sku": {
                "name": "S0"
              },
              "kind": "OpenAI",
              "properties": {
                "customSubDomainName": "[parameters('accounts_byc_openai_name')]",
                "networkAcls": {
                  "defaultAction": "Allow",
                  "virtualNetworkRules": [],
                  "ipRules": []
                },
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('accounts_byc_openai_name'), 'gpt-35-turbo-16k')]",
              "sku": {
                "name": "Standard",
                "capacity": 1
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "gpt-35-turbo-16k",
                  "version": "0613"
                },
                "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
                "raiPolicyName": "Microsoft.Default"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_byc_openai_name'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('accounts_byc_openai_name'), 'text-embedding-ada-002')]",
              "sku": {
                "name": "Standard",
                "capacity": 59
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "text-embedding-ada-002",
                  "version": "2"
                },
                "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
                "raiPolicyName": "Microsoft.Default"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_byc_openai_name'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('accounts_byc_openai_name'), 'gpt-35-turbo-16k')]"
              ]
            }
          ],
          "outputs": {
            "openAIOutput": {
              "type": "object",
              "value": {
                "openAPIKey": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_byc_openai_name')), '2023-05-01').key1]",
                "openAPIVersion": "2023-05-01",
                "openAPIEndpoint": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_byc_openai_name')), '2023-05-01').endpoint]",
                "openAIAccountName": "[parameters('accounts_byc_openai_name')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_upload_files_script",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep'), '2022-09-01').outputs.storageAccountOutput.value.name]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          },
          "containerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep'), '2022-09-01').outputs.storageAccountOutput.value.dataContainer]"
          },
          "identity": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity'), '2022-09-01').outputs.managedIdentityOutput.value.id]"
          },
          "storageAccountKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep'), '2022-09-01').outputs.storageAccountOutput.value.key]"
          },
          "baseUrl": {
            "value": "[variables('baseUrl')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "9630487228008249805"
            }
          },
          "parameters": {
            "solutionLocation": {
              "type": "string",
              "metadata": {
                "description": "Specifies the location for resources."
              }
            },
            "storageAccountKey": {
              "type": "securestring"
            },
            "storageAccountName": {
              "type": "string"
            },
            "containerName": {
              "type": "string"
            },
            "identity": {
              "type": "string"
            },
            "baseUrl": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "copy_demo_Data",
              "kind": "AzureCLI",
              "location": "[parameters('solutionLocation')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('identity'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.50.0",
                "primaryScriptUri": "[format('{0}Deployment/scripts/copy_kb_files.sh', parameters('baseUrl'))]",
                "arguments": "[format('{0} {1} {2} {3}', parameters('storageAccountName'), parameters('containerName'), parameters('storageAccountKey'), parameters('baseUrl'))]",
                "timeout": "PT1H",
                "retentionInterval": "PT1H",
                "cleanupPreference": "OnSuccess"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_keyvault",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionName": {
            "value": "[parameters('solutionPrefix')]"
          },
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          },
          "objectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity'), '2022-09-01').outputs.managedIdentityOutput.value.objectId]"
          },
          "tenantId": {
            "value": "[subscription().tenantId]"
          },
          "managedIdentityObjectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity'), '2022-09-01').outputs.managedIdentityOutput.value.objectId]"
          },
          "adlsAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep'), '2022-09-01').outputs.storageAccountOutput.value.storageAccountName]"
          },
          "adlsAccountKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep'), '2022-09-01').outputs.storageAccountOutput.value.key]"
          },
          "adlsStoreName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep'), '2022-09-01').outputs.storageAccountOutput.value.storageAccountName]"
          },
          "openApiType": {
            "value": "azure"
          },
          "azureOpenAIApiKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy_azure_open_ai'), '2022-09-01').outputs.openAIOutput.value.openAPIKey]"
          },
          "azureOpenAIApiVersion": {
            "value": "2023-07-01-preview"
          },
          "azureOpenAIEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy_azure_open_ai'), '2022-09-01').outputs.openAIOutput.value.openAPIEndpoint]"
          },
          "azureSearchAdminKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy_ai_search_service'), '2022-09-01').outputs.searchServiceOutput.value.searchServiceAdminKey]"
          },
          "azureSearchServiceEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy_ai_search_service'), '2022-09-01').outputs.searchServiceOutput.value.searchServiceEndpoint]"
          },
          "cogServiceEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy_azure_ai_service'), '2022-09-01').outputs.cogSearchOutput.value.cogServiceEndpoint]"
          },
          "cogServiceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy_azure_ai_service'), '2022-09-01').outputs.cogSearchOutput.value.cogServiceName]"
          },
          "cogServiceKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy_azure_ai_service'), '2022-09-01').outputs.cogSearchOutput.value.cogServiceKey]"
          },
          "enableSoftDelete": {
            "value": false
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "9343788458881547376"
            }
          },
          "parameters": {
            "solutionName": {
              "type": "string",
              "minLength": 3,
              "maxLength": 15,
              "metadata": {
                "description": "Solution Name"
              }
            },
            "solutionLocation": {
              "type": "string",
              "metadata": {
                "description": "Solution Location"
              }
            },
            "utc": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "kvName": {
              "type": "string",
              "defaultValue": "[format('{0}-kv-{1}', parameters('solutionName'), uniqueString(parameters('utc')))]",
              "metadata": {
                "description": "Name"
              }
            },
            "objectId": {
              "type": "string",
              "metadata": {
                "description": "Object Id. The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault."
              }
            },
            "createMode": {
              "type": "string",
              "defaultValue": "default",
              "metadata": {
                "description": "Create Mode"
              }
            },
            "enableForDeployment": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enabled For Deployment. Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
              }
            },
            "enableForDiskEncryption": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enabled For Disk Encryption. Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
              }
            },
            "enableForTemplateDeployment": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enabled For Template Deployment. Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
              }
            },
            "enablePurgeProtection": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable Purge Protection. Property specifying whether protection against purge is enabled for this vault."
              }
            },
            "enableRBACAuthorization": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable RBAC Authorization. Property that controls how data actions are authorized."
              }
            },
            "enableSoftDelete": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable Soft Delete. Property to specify whether the \"soft delete\" functionality is enabled for this key vault."
              }
            },
            "softDeleteRetentionInDays": {
              "type": "int",
              "defaultValue": 30,
              "metadata": {
                "description": "Soft Delete Retention in Days. softDelete data retention days. It accepts >=7 and <=90."
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "enabled",
              "allowedValues": [
                "enabled",
                "disabled"
              ],
              "metadata": {
                "description": "Public Network Access, Property to specify whether the vault will accept traffic from public internet."
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "SKU"
              }
            },
            "tenantId": {
              "type": "string",
              "metadata": {
                "description": "Tenant Id"
              }
            },
            "managedIdentityObjectId": {
              "type": "string"
            },
            "adlsAccountName": {
              "type": "string"
            },
            "adlsAccountKey": {
              "type": "securestring"
            },
            "adlsStoreName": {
              "type": "string"
            },
            "azureOpenAIApiKey": {
              "type": "securestring"
            },
            "azureOpenAIApiVersion": {
              "type": "string"
            },
            "azureOpenAIEndpoint": {
              "type": "string"
            },
            "azureSearchAdminKey": {
              "type": "securestring"
            },
            "azureSearchServiceEndpoint": {
              "type": "string"
            },
            "cogServiceEndpoint": {
              "type": "string"
            },
            "cogServiceKey": {
              "type": "securestring"
            },
            "cogServiceName": {
              "type": "string"
            },
            "openApiType": {
              "type": "string"
            }
          },
          "variables": {
            "vaultUri": "[format('https://{0}.vault.azure.net/', parameters('kvName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('kvName')]",
              "location": "[parameters('solutionLocation')]",
              "tags": {
                "app": "[parameters('solutionName')]",
                "location": "[parameters('solutionLocation')]"
              },
              "properties": {
                "accessPolicies": [
                  {
                    "objectId": "[parameters('objectId')]",
                    "permissions": {
                      "certificates": [
                        "all"
                      ],
                      "keys": [
                        "all"
                      ],
                      "secrets": [
                        "all"
                      ],
                      "storage": [
                        "all"
                      ]
                    },
                    "tenantId": "[parameters('tenantId')]"
                  }
                ],
                "createMode": "[parameters('createMode')]",
                "enabledForDeployment": "[parameters('enableForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enableForDiskEncryption')]",
                "enabledForTemplateDeployment": "[parameters('enableForTemplateDeployment')]",
                "enablePurgeProtection": "[parameters('enablePurgeProtection')]",
                "enableRbacAuthorization": "[parameters('enableRBACAuthorization')]",
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "provisioningState": "RegisteringDns",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "sku": {
                  "family": "A",
                  "name": "[parameters('sku')]"
                },
                "tenantId": "[parameters('tenantId')]",
                "vaultUri": "[variables('vaultUri')]"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().id, parameters('managedIdentityObjectId'), resourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483'))]",
              "properties": {
                "principalId": "[parameters('managedIdentityObjectId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'TENANT-ID')]",
              "properties": {
                "value": "[parameters('tenantId')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'ADLS-ACCOUNT-NAME')]",
              "properties": {
                "value": "[parameters('adlsAccountName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'ADLS-ACCOUNT-KEY')]",
              "properties": {
                "value": "[parameters('adlsAccountKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'ADLS-STORE-NAME')]",
              "properties": {
                "value": "[parameters('adlsStoreName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-OPENAI-API-KEY')]",
              "properties": {
                "value": "[parameters('azureOpenAIApiKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-OPENAI-API-VERSION')]",
              "properties": {
                "value": "[parameters('azureOpenAIApiVersion')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-OPENAI-ENDPOINT')]",
              "properties": {
                "value": "[parameters('azureOpenAIEndpoint')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-SEARCH-ADMIN-KEY')]",
              "properties": {
                "value": "[parameters('azureSearchAdminKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-SEARCH-SERVICE-ENDPOINT')]",
              "properties": {
                "value": "[parameters('azureSearchServiceEndpoint')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'COG-SERVICES-ENDPOINT')]",
              "properties": {
                "value": "[parameters('cogServiceEndpoint')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'COG-SERVICES-KEY')]",
              "properties": {
                "value": "[parameters('cogServiceKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'COG-SERVICES-NAME')]",
              "properties": {
                "value": "[parameters('cogServiceName')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'OPENAI-API-TYPE')]",
              "properties": {
                "value": "[parameters('openApiType')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-SUBSCRIPTION-ID')]",
              "properties": {
                "value": "[subscription().subscriptionId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-RESOURCE-GROUP')]",
              "properties": {
                "value": "[resourceGroup().name]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('kvName'), 'AZURE-LOCATION')]",
              "properties": {
                "value": "[parameters('solutionLocation')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
              ]
            }
          ],
          "outputs": {
            "keyvaultOutput": {
              "type": "object",
              "value": {
                "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]",
                "name": "[parameters('kvName')]",
                "uri": "[variables('vaultUri')]",
                "resource": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('kvName')), '2022-07-01', 'full')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'deploy_azure_ai_service')]",
        "[resourceId('Microsoft.Resources/deployments', 'deploy_azure_open_ai')]",
        "[resourceId('Microsoft.Resources/deployments', 'deploy_ai_search_service')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_storage_account.bicep')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy_python_scripts",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "solutionLocation": {
            "value": "[variables('solutionLocation')]"
          },
          "identity": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity'), '2022-09-01').outputs.managedIdentityOutput.value.id]"
          },
          "baseUrl": {
            "value": "[variables('baseUrl')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_keyvault'), '2022-09-01').outputs.keyvaultOutput.value.name]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.25.53.49325",
              "templateHash": "15808530668823644396"
            }
          },
          "parameters": {
            "solutionLocation": {
              "type": "string",
              "metadata": {
                "description": "Specifies the location for resources."
              }
            },
            "baseUrl": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "identity": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "create_index",
              "kind": "AzureCLI",
              "location": "[parameters('solutionLocation')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('identity'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.52.0",
                "primaryScriptUri": "[format('{0}deployment/scripts/run_python_scripts.sh', parameters('baseUrl'))]",
                "arguments": "[format('{0} {1}', parameters('baseUrl'), parameters('keyVaultName'))]",
                "timeout": "PT1H",
                "retentionInterval": "PT1H",
                "cleanupPreference": "OnSuccess"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, resourceGroup().name), 'Microsoft.Resources/deployments', 'deploy_managed_identity')]"
      ]
    }
  ]
}